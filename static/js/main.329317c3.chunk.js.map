{"version":3,"sources":["components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/AppHeader/AppHeader.js","components/SearchPanel/SearchPanel.js","components/ItemStatusFilter/ItemStatusFilter.js","components/TopPanel/TopPanel.js","components/NewItem/NewItem.js","components/App/index.js","components/App/App.js","index.js"],"names":["TodoListItem","onDeleteItem","onToggleProperty","item","itemClasses","important","done","favorite","className","onClick","id","itemTitle","type","TodoList","listItems","todoData","statusFilter","filter","map","key","length","AppHeader","todo","SearchPanel","term","onSearch","value","onChange","placeholder","autoComplete","ItemStatusFilter","onToggleItemsStatus","TopPanel","NewItem","state","title","setTitle","evt","setState","target","markImportant","submitForm","preventDefault","alert","props","onAddItem","action","onSubmit","this","checked","Component","App","createItem","deleteItem","index","findIndex","el","slice","addItem","newItem","newData","toggleProperty","prop","modifiedItem","search","e","toggleItemsStatus","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.329317c3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nconst TodoListItem = ({onDeleteItem, onToggleProperty, item}) => {\r\n    let itemClasses = 'todo-list-item-label';\r\n\r\n    itemClasses += item.important ? ' important' : '';\r\n    itemClasses += item.done ? ' done' : '';\r\n    itemClasses += item.favorite ? ' favorite' : '';\r\n\r\n    return (\r\n         <span className=\"todo-list-item\">\r\n              <span\r\n                  className={itemClasses}\r\n                  onClick={() => {onToggleProperty(item.id, 'done')}}>\r\n                  {item.itemTitle}\r\n                  <span className=\"ml-2\">{item.favorite ? <i className=\"fa fa-star\"></i> : null}</span>\r\n              </span>\r\n\r\n              <button type=\"button\"\r\n                      onClick={() => {onToggleProperty(item.id, 'important')}}\r\n                      className=\"btn btn-outline-success btn-sm float-right\">\r\n                <i className=\"fa fa-exclamation\"/>\r\n              </button>\r\n\r\n              <button type=\"button\"\r\n                      onClick={() => {onDeleteItem(item.id)}}\r\n                      className=\"btn btn-outline-danger btn-sm float-right\">\r\n                <i className=\"fa fa-trash-o\"/>\r\n              </button>\r\n\r\n               <button type=\"button\"\r\n                       onClick={() => {onToggleProperty(item.id, 'favorite')}}\r\n                       className=\"btn btn-outline-warning btn-sm float-right\">\r\n                <i className=\"fa fa-star\"></i>\r\n              </button>\r\n         </span>\r\n    )\r\n};\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport TodoListItem from \"../TodoListItem/TodoListItem\";\r\nimport './style.css';\r\n\r\nconst TodoList = ({todoData, onDeleteItem, onToggleProperty, statusFilter}) => {\r\n    let listItems;\r\n\r\n    if (statusFilter === 'active' || statusFilter === 'done') {\r\n        let filteredItems = todoData.filter((item) => {\r\n            return statusFilter === 'active' ? !item.done : item.done;\r\n        });\r\n\r\n        listItems = filteredItems.map((item) => {\r\n            return (\r\n                <li key={item.id} className=\"list-group-item\">\r\n                    <TodoListItem item={item}\r\n                                  onDeleteItem={onDeleteItem}\r\n                                  onToggleProperty={onToggleProperty}\r\n                    />\r\n                </li>\r\n            )\r\n        });\r\n    } else {\r\n        listItems = todoData.map((item) => {\r\n            return (\r\n                <li key={item.id} className=\"list-group-item\">\r\n                    <TodoListItem item={item}\r\n                                  onDeleteItem={onDeleteItem}\r\n                                  onToggleProperty={onToggleProperty}\r\n                    />\r\n                </li>\r\n            )\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {listItems.length ? listItems : <div className=\"alert alert-danger\">This list is empty. Add new todo item!</div>}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst AppHeader = ({todo,done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{todo ? todo + ' more to do, ' : 'Everything is done! ' } {done} done</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst SearchPanel = ({term, onSearch}) => {\r\n    const placeholder = 'Type here to search';\r\n\r\n    return (\r\n        <input type=\"text\"\r\n               value={term}\r\n               onChange={onSearch}\r\n               placeholder={placeholder}\r\n               className=\"search-input form-control\"\r\n               autoComplete=\"off\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default SearchPanel;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst ItemStatusFilter = ({onToggleItemsStatus, statusFilter}) => {\r\n    let itemClasses = 'btn btn-outline-secondary';\r\n\r\n    return (\r\n        <div className=\"btn-group\">\r\n            <button type=\"button\"\r\n                    className={(statusFilter === 'all') ? itemClasses + ' active' : itemClasses}\r\n                    onClick={() => {onToggleItemsStatus('all')}}>All\r\n            </button>\r\n            <button type=\"button\"\r\n                    className={(statusFilter === 'active') ? itemClasses + ' active' : itemClasses}\r\n                    onClick={() => {onToggleItemsStatus('active')}}>Active\r\n            </button>\r\n            <button type=\"button\"\r\n                    className={(statusFilter === 'done') ? itemClasses + ' active' : itemClasses}\r\n                    onClick={() => {onToggleItemsStatus('done')}}>Done\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ItemStatusFilter;","import React from 'react';\r\nimport './style.css';\r\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\r\nimport ItemStatusFilter from \"../ItemStatusFilter/ItemStatusFilter\";\r\n\r\nconst TopPanel = ({onSearch, term, onToggleItemsStatus, statusFilter}) => {\r\n    return (\r\n        <div className=\"top-panel d-flex mb-3\">\r\n            <SearchPanel onSearch={onSearch} term={term}/>\r\n            <ItemStatusFilter onToggleItemsStatus={onToggleItemsStatus} statusFilter={statusFilter}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TopPanel;","import React, {Component} from 'react';\r\nimport './style.css';\r\n\r\nclass NewItem extends Component{\r\n    state = {\r\n        title: '',\r\n        important: false\r\n    };\r\n\r\n    setTitle = (evt) => {\r\n        this.setState({\r\n            title: evt.target.value\r\n        });\r\n    };\r\n\r\n    markImportant = () => {\r\n        this.setState({\r\n            important: !this.state.important\r\n        });\r\n    };\r\n\r\n    submitForm = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if (this.state.title.length <= 3) {\r\n            alert('You have entered a short title name. The length of the title name must be more than 3 symbols');\r\n        } else {\r\n            this.props.onAddItem(this.state.title, this.state.important);\r\n\r\n            this.setState({\r\n                title: '',\r\n                important: false\r\n            });\r\n        }\r\n    };\r\n\r\n    render () {\r\n        const placeholder = 'Type here to add new todo';\r\n\r\n        return (\r\n            <form action=\"\"\r\n                  className=\"new-item\"\r\n                  onSubmit={this.submitForm}\r\n            >\r\n                <input type=\"text\"\r\n                       className=\"form-control\"\r\n                       onChange={this.setTitle}\r\n                       value={this.state.title}\r\n                       placeholder={placeholder}\r\n                />\r\n                <div className=\"form-check mx-2 d-flex\">\r\n                    <input type=\"checkbox\"\r\n                           className=\"form-check-input\"\r\n                           checked={this.state.important}\r\n                           onChange={this.markImportant}\r\n                    />\r\n                    <span>Is important?</span>\r\n                </div>\r\n                <button className=\"btn btn-primary\">Add</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewItem;","import App from './App';\r\nexport default App;","import React, {Component} from 'react';\r\nimport TodoList from \"../TodoList/TodoList\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport './style.css';\r\nimport TopPanel from \"../TopPanel/TopPanel\";\r\nimport NewItem from \"../NewItem/NewItem\";\r\n\r\nexport default class App extends Component {\r\n    id = 1;\r\n\r\n    createItem = (title, done = false, important = false, favorite = false) => {\r\n        return {\r\n            itemTitle: title,\r\n            id: this.id++,\r\n            done: done,\r\n            important: important,\r\n            favorite: favorite\r\n        }\r\n    };\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createItem('Drink coffe', true, false, true),\r\n            this.createItem('Learn ES6+', false, true),\r\n            this.createItem('Learn React', false, true),\r\n            this.createItem('Learn Redux'),\r\n            this.createItem('Get diploma', false, true),\r\n        ],\r\n        term: '',\r\n        statusFilter: 'all'\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        let {todoData} = this.state,\r\n            index = todoData.findIndex((el) => el.id === id);\r\n\r\n        this.setState({\r\n            todoData: [\r\n                ...todoData.slice(0, index),\r\n                ...todoData.slice(index + 1)\r\n            ]\r\n        });\r\n    };\r\n\r\n    addItem = (title, important) => {\r\n        let newItem = this.createItem(title, false, important),\r\n            newData = [\r\n                ...this.state.todoData, newItem\r\n            ];\r\n\r\n        this.setState({\r\n            todoData: newData\r\n        })\r\n    };\r\n\r\n    toggleProperty = (id, prop) => {\r\n        let {todoData} = this.state,\r\n            index = todoData.findIndex((el) => el.id === id),\r\n            modifiedItem = todoData[index];\r\n\r\n        modifiedItem[prop] = !modifiedItem[prop];\r\n\r\n        this.setState({\r\n            todoData: [\r\n                ...todoData.slice(0, index),\r\n                modifiedItem,\r\n                ...todoData.slice(index + 1)\r\n            ]\r\n        });\r\n    };\r\n\r\n    search = (e) => {\r\n        this.setState({\r\n            term: e.target.value\r\n        });\r\n    };\r\n\r\n    toggleItemsStatus = (status) => {\r\n        this.setState({\r\n            statusFilter: status\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let {todoData, term, statusFilter} = this.state,\r\n            done = todoData.filter(el => el.done).length,\r\n            todo = todoData.length - done;\r\n\r\n        return (\r\n            <div className=\"p-5\">\r\n                <AppHeader todo={todo} done={done}/>\r\n                <TopPanel onSearch={this.search}\r\n                          term={term}\r\n                          statusFilter={statusFilter}\r\n                          onToggleItemsStatus={this.toggleItemsStatus}/>\r\n                <TodoList todoData={todoData}\r\n                          statusFilter={statusFilter}\r\n                          onDeleteItem={this.deleteItem}\r\n                          onToggleProperty={this.toggleProperty}/>\r\n                <NewItem onAddItem={this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/';\n\nReactDOM.render(<App/>, document.getElementById('todo'));"],"sourceRoot":""}